using System.Management.Automation.Language;
using PSyringe.Common.Language;
using PSyringe.Common.Language.Elements;

namespace PSyringe.Common.Compiler;

/// <summary>
///   Updates a Script Definition generated by the PSyringe Parser.
///   Implementations can be provided to the script compiler as to update
///   the script definition before it is compiled to a PSyringe Script.
/// </summary>
public interface IScriptTransformer {
  public void Transform(ref IScriptDefinition script);

  public VariableExpressionAst MakeVariable(string name, string? scope = null, bool splatted = false);

  /// <summary>
  ///   Creates a Variable that will contain the value of the
  ///   provider specified.
  /// </summary>
  /// <param name="target">The name of the variable the provider is written into</param>
  /// <param name="provider">The provider that will be injected into the variable</param>
  /// <returns></returns>
  public VariableExpressionAst AddProvider(
    string target,
    IProviderResolvable provider
  );

  public IEnumerable<IScriptVariableDependency> GetVariableDependencies();
}